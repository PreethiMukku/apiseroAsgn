- DevOps is the collaboration of Developers and Operaters for the development of a certain application or software

- End to End development is defined as the process from the beginning of the development to the end of the deployment process. It basically refers to gthe completion of one unit.

-DevOps is basically the combination of Business agility, Technical innovation and Infrastructure choice.

- Business agility has five basic parameters. They are,

1. Time to market accleration -> This deals with how quickly can one launch a new product in the market.
2. Experimentation -> This is the only way to come up with new innovation products.
3. Rapid Prototyping -> With the increase in competition, one has to remember that the time to build the product is quite less. Hence, one should be quick in building the prototypes.
4. Flexible Partnering -> One hhas to have flexible partnership with the partners in order to incorporate last minute changes.
5. IoT/IoS -> This is method of connecting every object with the help of internet.

- Technical innovation and Infrastructure also plays a key role in DevOps.

- Infrastructure as a Code -> Here we write a code to perform all the function in development of application. In a simple click, one can perform operations of configuring, installind the instances. Multiple environment is created in very less time as compared to IaaS.

- Application Developmet -> This involves four steps, which are,

1. Development environment -> Here, we configure and install the instances.
2. Test environment -> The testing of the data is done in this step.
3. QA environment -> In thsi step, data is tested against the software and the hardware. The data is closeley performed in the parameters of the production environment.
4. Production environment -> In this step, the application is available for business use.

- System Development Life Cycle (SDLC) -> It is a multistep, iterative process, structured in a methodical way. It involves 7 phases which are,

1. Planning -> Here, the scope of the problem is identifies and defined.
2. Systems analysis & Requirements -> This is the crucial step for the success of the project. It determines the functional requirements of the project.
3. Systems design -> This defines the specific requirements and features of the system which would satisfy the functional requirements.
4. Development -> In this phase, the development process is actually performed. 
5. Integration & Testing -> Here, the integration of all the requirements is done and tested with the predefined requirements.
6. Implementation -> The project is implemented for the business use.
7. Operations & Mainatinence -> Here, the mainatainence of the project is regularly performed.

- Waterfall Model -> It is model which incorporates most of the above steps. The only issue in this model is that one cannot return to the previous step once it is completed. ALso, there is no option of testing after every phase or step.

- V Model -> This is a quite better model compared to Waterfall model wherein equal importance is given to testing at each and every step before proceeding to the next step.

- Agile Method -> Agile method is a process of breaking down the entire project into a series of small development processes. In each of these smaller process, all the process of development is performed and tested and then proceeded to next step. It can be deployed at the end of every small step. This helps in better performance and simpler last minute changes in the project requirements.

- Manifesto

1. Individuals and interactions over processes and tools
2. Working software over comprehensive documentation
3. Customer collaboration over contract negotiation
4. Responding to change over following a plan

- 12 principles of Agile method ->

1. Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.

2. Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage.

3. Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.

4. Business people and developers must work together daily throughout the project.

5. Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.

6. The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.

7. Working software is the primary measure of progress.

8. Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.

9. Continuous attention to technical excellence and good design enhances agility.

10. Simplicity -> the art of maximizing the amount of work not done--is essential.

11. The best architectures, requirements, and designs emerge from self-organizing teams.

12. At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.

- Where agile can be used and where it cannot be used ->

- Favourable -> When customers requirements changes frequently, when the customer is ready for collaborating regularly, when the problem is complex and the solutions are unknown.
- Unfavourable -> When market conditions are known and stable, the requirements are clear from the customer end, when similar kind of work is already being performed earlier.

- User Acceptance Testing (UAT) -> This is the testing which is done at the end of the development of the application. This is done when the product is ready to be launched for business purpose. This testing is done by the production user rather than the software developers. The idea is not to detect defects in the problem but to find the extra features which the user may like or the features which is alreaady present and is not liked by the user.

- 5 steps to conduct great UAT -> These steps are Planning, Execute, Documentation, Evaluation and Reporting.

- JIRA -> JIRA is a way of issue tracking in a project. It basically also helps in maning the work for almost all kinds of teams. Some JIRA features also help in agile functionality.

- Demo on JIRA

-> Login the Jira website developed by atlassian. 
-> Then create a project in your acccount. 
-> The one who creates the project will be the admin of the project.  
-> The members are added into the team by sending them an invite on their mail id.
-> On acceptance of the invite, the team is created. Now, one can track down any issue in the project.
-> When a issue is tracked by one of the members, he/she can assign another member to look for the issue and correct it.
-> The assignee will look into the issue and solve the issue. He/She can also assign sub section of the issue to another member of the team.
-> On solving the issue, the member can update the reporter of the issue that the bug had been rectified.
-> This software follows a flat hierarchy in the team, which makes the issue solving even more simpler.
-> Dashboard creation availability helps in keeping track of the performance of the team over a given period of time.
