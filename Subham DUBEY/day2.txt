Revision of Day 1's concepts.

OOPS CONCEPTS.

---> Class
- It is a set of varables and methods. 
- It is basically a blueprint that the object follows.
- The data can't be accessible to everyone. One who has the access to the methods will have the permission to work and modify the data. Thus, there cannot be modifications of the data from outside.

---> Obect
- Object is nothing but the instance of the class.
- It is the object which acts as the medium of communication between two classes.

---> Encapsulation
- It binds one or more instances into one entity.

---> Abstraction
- This helps in hiding the important instance like the business logic from the public. It only displays limited information to its viewers.

---> Inheritance
- Here the information of the instances are stored as separate instances. The common data is stored as the main primary instance which the remaining subset as stored as the extension of the primary instance. One of the problem is that the sub instance is tightly coupled with the primary instance.

---> Polymorphism
- As the name suggests the data can be morphed or represented in many multiple forms.

-> Case study of Acme industries.

-> Java supports multiple inheritance using interfaces.
   Use Inheritance only when there is a common data member. Dont use for code reuse or type.
-> Inheritance breaks encapsulation.
   If we use private code then the encapsulation is not broken.
   ex: class Emp {
   private int emp no;
   private int ename;
   }
   class fresher extends Emp {m1() {
    empno=100;
   }
   Here if private is replaced by protected then the encapsulation is not broken.
   
   Java uses compile time relationship.
