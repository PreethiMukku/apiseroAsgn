JAVA LANGUAGE
	-> JAVA Source code is both compiled and interpreted
		->Compiler(javac tool)-> .class (Byte code) 
		-> java -> Machine compatible code.
	--> java allows maximum compile time exceptions centric than run time exception centric.
	--> Provides various classes interfaces and libraries, to increase code re-usability and unnecessay implemenataions.
	--> Platform independent.
	--> JRE is platforms specific, to run the byte code.

JAVA NAMING CONVENTIONS
	--> Class name should start with Capital letter.
	--> file name should be same as Public class name, but should not begin with special characters.
	--> variables can be mixed case, provided not starting with $ and _
	--> functions/methods should begin with lower case & end with ()
	--> If two classes have same name, must be mandatorily be belonging to different packages
	--> reverse words like if else continue break for etc cannot be variables

ABSTRACTION IN JAVA
	--> Java implements abstraction through Abstract Class(0-100%) and Interface(100%)
	-Java Abstract, Final.
		Abstract Class->
			-Abstract classes used for 1. Inheritance 2. Static
			-Cannot create instance of Abstract class.
			-Can create derived class from Abstract Class.
		Abstract Method->
			-Abstract method should be declared in Abstract class only.
		Final Class->
			-Can create instance of Abstract class.
			-Cannot create derived class from Abstract Class.
		Final Method->
			-Final method cannot be overridden in derived class.
INTERFACES
	--> One Interface can extend another interface.
	--> Interfaces are just like pure abstract class.No data variables, no actual methods but only abstract methods.
	--> While implementating interface for a class-> Use interface as new Implementation class
	--> Interface i =new ImplementationClass()

CONSTRUCTOR
	-If constructor is not mentioned, java creates default constructor.
	-For inheritance, java initiates constructor of base class first and then derived class constructor.
	-Constructors used for Object Initialization.

ACCESS MODIFIERS
	-Public, Private, Protected.

EXCEPTION HANLDLING
	-Try block contains the code which may cause exception.
	-Catch block catches the exception occured in try and throws it to client with Exception message. throw e.
	-finally is a block in Java, it executes anyway.

COLLECTION FRAMEWORK
	-Combination of interface, implementation and Algorithms.
	-can be set, list and map.

	-List is collection items and can be created using library java.util.ArrayList.
	-List<String> list = new ArrayList<>();

	-For set, there are many classes such as HashSet, TreeSet.
		-HashSet->
  			1.There are no duplications
  			2.Has no ordering or can say has hash function ordering
  			3.Set<Integer> h1  = new HashSet<>();
		-TreeSet->
  			1. There are no duplications
  			2. has proper ordering, elements are sorted.
  			3.Set<Integer> h1  = new TreeSet<>();
		-Map->
		-Map is something which comes with Key Value Pair.
		-For map, there are classes like HashMap, TreeMap
		-HashMap->
   		1.Map<String,Integer> map =new HashMap<>();
    		2. Has functions such as put,remove,get.
		-TreeMap->
    		1.Map<String,Integer> map =new TreeMap<>();
    		2. Has functions such as put,remove,get.

-MultiThreading in java->
-Multithreading is spliting work task into threads assigning each with equal amount of time.
-implemented by extending Thread class.
-Have to override run() method.
-In main method have to create object of thread and can call start() method.
