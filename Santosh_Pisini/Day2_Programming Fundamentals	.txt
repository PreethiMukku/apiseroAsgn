Programming Fundamentals	

Object:
-> Instance of class
-> Real-world entity

Class:
-> Collection if objects
-> Similar to a blueprint of an object

->Developer need to write code in Object Orientation way, by default language is not Object Oriented
->  Object Orientation is to make code more flexible and maintainable 

OOPS Concepts
Abstraction:
-> Hiding implementation from the user
-> Java ==> With abstract class or interface
-> Composition of tablet

Encapsulation:
-> Wrapping of data and code together into a single unit
-> Tablet

==> Inheritance breaks Encapsulation -> 50% Yes and 50% No

Inheritance:
-> Using components of one class in other classes
==> Levels:
	->Single
	->Multilevel
	->Multiple
	->Hybrid
-> Multiple is not supported in Java because ambiguity but can work with interface's

Polymorphism:
-> Taking multiple forms
	-> Method Overloading -> Same class , Different signature
	-> Method Overriding -> Different class , Same signature

==> Java does compiler time relation mapping.
